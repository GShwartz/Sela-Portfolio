parameters:
- name: kubernetesServiceConnection
- name: namespace

steps:
  - task: KubernetesManifest@0
    displayName: Create imagePullSecret
    inputs:
      action: 'createSecret'
      kubernetesServiceConnection: ${{ parameters.kubernetesServiceConnection }}
      namespace: ${{ parameters.namespace }}
      secretType: 'generic'
      secretName: 'secret'
      secretArguments: '--from-literal=COOKIE_ENCRYPT_PWD=$(COOKIE_ENCRYPT_PWD) --from-literal=HOST=$(HOST) --from-literal=PORT=$(PORT) --from-literal=NODE_ENV=$(NODE_ENV) --from-literal=HOST_URL=$(HOST_URL) --from-literal=OKTA_CLIENT_ID=$(OKTA_CLIENT_ID) --from-literal=OKTA_CLIENT_SECRET=$(OKTA_CLIENT_SECRET) --from-literal=OKTA_ORG_URL=$(OKTA_ORG_URL) --from-literal=PGHOST=$(PGHOST) --from-literal=PGUSERNAME=$(PGUSERNAME) --from-literal=PGDATABASE=$(PGDATABASE) --from-literal=PGPASSWORD=$(PGPASSWORD) --from-literal=PGPORT=$(PGPORT)'

  - task: KubernetesManifest@0
    displayName: Deploy to Kubernetes cluster
    inputs:
      action: 'deploy'
      kubernetesServiceConnection: ${{ parameters.kubernetesServiceConnection }}
      namespace: ${{ parameters.namespace }}
      manifests: |
        $(Pipeline.Workspace)/manifests/service.yml
        $(Pipeline.Workspace)/manifests/ingress.yml
        $(Pipeline.Workspace)/manifests/deploy.yml
      containers: '$(containerRegistry)/$(imageRepository):$(build.BuildId)'